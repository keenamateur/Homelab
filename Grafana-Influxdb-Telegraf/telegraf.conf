[global_tags]
  # dc = "eu"
  # rack = "1a"

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false
  logfile = "/var/log/telegraf/telegraf.log"

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################
[[outputs.influxdb_v2]]
  urls = ["http://172.30.10.61:8086"]
  token = "yourtoken"
  organization = "myorg"
  bucket = "deathstar"
  timeout = "5s"
  user_agent = "telegraf"
  namepass = ["cpu", "disk", "mem", "processes", "swap", "system", "internal"]

[[outputs.influxdb_v2]]
  urls = ["http://172.30.10.61:8086"]
  token = "yourtoken"
  organization = "myorg"
  bucket = "docker"
  timeout = "5s"
  user_agent = "telegraf"
  namedrop = ["cpu", "disk", "mem", "processes", "swap", "system", "prometheus"]
  namepass = ["docker"]


[[outputs.influxdb_v2]]
  urls = ["http://172.30.10.61:8086"]
  token = "yourtoken"
  organization = "myorg"
  bucket = "prometheus"
  timeout = "5s"
  user_agent = "telegraf"
  namepass = ["prometheus"]

[[outputs.influxdb_v2]]
  urls = ["http://172.30.10.61:8086"]
  token = "yourtoken"
  organization = "myorg"
  bucket = "network_data"
  timeout = "5s"
  user_agent = "telegraf"
  namepass = ["net"]

[[outputs.influxdb_v2]]
  urls = ["http://172.30.10.61:8086"]
  token = "yourtoken"
  organization = "myorg"
  bucket = "mqtt"
  timeout = "5s"
  user_agent = "telegraf"
  namepass = ["mqtt"]


###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

# System 
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

[[inputs.mem]]

[[inputs.processes]]

[[inputs.swap]]

[[inputs.system]]


[[inputs.internal]]
  collect_memstats = true

# Docker metrics (goes to docker bucket)
[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  timeout = "5s"
  perdevice = true
  source_tag = false
  container_name_include = []
  #container_name_exclude = []
  total = false
  container_name_exclude = ["/telegraf"]
  docker_label_include = []
  tag_env = ["*"]

# Prometheus input (goes to prometheus bucket)
[[inputs.prometheus]]
  urls = ["http://172.30.10.62:9090/metrics"]
  response_timeout = "5s"

# network_data
[[inputs.net]]
  interfaces = ["eth*", "enp3s*", "lo"]   # chnge according to your network interfaces


# MQTT consumer
[[inputs.mqtt_consumer]]
  servers = ["tcp://172.30.10.10:52888"]
  topics = ["#"]  # all topics
  qos = 0
  data_format = "json" 
  username = "username"
  password = "password"
  name_override = "mqtt"
